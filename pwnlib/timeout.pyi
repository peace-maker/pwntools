from typing import Any
from typing_extensions import Protocol, TypeAlias

class TimeoutDefault: ...
class Maximum(float): ...

maximum: Maximum

TimeoutValue: TypeAlias = float | Maximum | TimeoutDefault

class TimeoutHandler(Protocol):
    obj: Timeout
    timeout: TimeoutValue
    old_timeout: TimeoutValue
    old_stop: float

    def __init__(self, obj: Timeout, timeout: TimeoutValue) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, *a: Any) -> None: ...

class Timeout:
    default: TimeoutDefault
    forever: None
    maximum: Maximum
    timeout: TimeoutValue

    def __init__(self, timeout: TimeoutValue = ...) -> None: ...
    def countdown_active(self) -> bool: ...
    def timeout_change(self) -> None: ...
    def countdown(self, timeout: TimeoutValue = ...) -> TimeoutHandler: ...
    def local(self, timeout: TimeoutValue) -> TimeoutHandler: ...
